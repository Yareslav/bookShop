{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\globalComponents\\\\bookComponents\\\\Hearth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useMemo, useContext } from \"react\";\nimport NotSelected from \"../../assets/images/favourite.png\";\nimport Selected from \"../../assets/images/favouriteActive.png\";\nimport { FavoriteBooksContext } from \"../../screens/Cabinet/index\";\nimport compare from \"../../functions/compare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Hearth = _ref => {\n  _s();\n\n  let {\n    data,\n    style\n  } = _ref;\n  const isInFavorites = useMemo(() => {\n    const favoriteBooks = JSON.parse(localStorage.getItem(\"favoriteBooks\"));\n\n    for (let i = 0; i < favoriteBooks.length; i++) {\n      if (compare(favoriteBooks[i], data)) return true;\n    }\n\n    return false;\n  }, []);\n  const [liked, setLiked] = useState(isInFavorites);\n  const setFavoriteBooks = useContext(FavoriteBooksContext);\n\n  const clickHandler = () => {\n    const favoriteBooks = JSON.parse(localStorage.getItem(\"favoriteBooks\"));\n    if (!liked) favoriteBooks.push(data);else {\n      let index;\n      favoriteBooks.forEach((elem, ind) => {\n        if (compare(elem, data)) index = ind;\n      });\n      favoriteBooks.splice(index, 1);\n      if (setFavoriteBooks) setFavoriteBooks([...favoriteBooks]);\n    }\n    setLiked(curr => !curr);\n    localStorage.setItem(\"favoriteBooks\", JSON.stringify(favoriteBooks));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"book__hearth \" + (style ? style : \"\"),\n    src: liked ? Selected : NotSelected,\n    onClick: clickHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Hearth, \"R33iYArprfLzTObC75G3FqEqYpU=\");\n\n_c = Hearth;\nexport default Hearth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hearth\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/globalComponents/bookComponents/Hearth.js"],"names":["React","useCallback","useEffect","useState","useMemo","useContext","NotSelected","Selected","FavoriteBooksContext","compare","Hearth","data","style","isInFavorites","favoriteBooks","JSON","parse","localStorage","getItem","i","length","liked","setLiked","setFavoriteBooks","clickHandler","push","index","forEach","elem","ind","splice","curr","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,OAAlD,EAA0DC,UAA1D,QAA4E,OAA5E;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,SAAQC,oBAAR,QAAmC,6BAAnC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AACA,MAAMC,MAAM,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAiB;AAC/B,QAAMC,aAAa,GAAGT,OAAO,CAAC,MAAM;AAClC,UAAMU,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAAa,CAACM,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIV,OAAO,CAACK,aAAa,CAACK,CAAD,CAAd,EAAmBR,IAAnB,CAAX,EAAqC,OAAO,IAAP;AACtC;;AACD,WAAO,KAAP;AACD,GAN4B,EAM3B,EAN2B,CAA7B;AAOA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAACU,aAAD,CAAlC;AACA,QAAMU,gBAAgB,GAAClB,UAAU,CAACG,oBAAD,CAAjC;;AACA,QAAMgB,YAAY,GAAG,MAAM;AACzB,UAAMV,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAtB;AACA,QAAI,CAACG,KAAL,EAAYP,aAAa,CAACW,IAAd,CAAmBd,IAAnB,EAAZ,KACK;AACH,UAAIe,KAAJ;AACAZ,MAAAA,aAAa,CAACa,OAAd,CAAsB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC,YAAIpB,OAAO,CAACmB,IAAD,EAAOjB,IAAP,CAAX,EAAyBe,KAAK,GAAGG,GAAR;AAC1B,OAFD;AAGAf,MAAAA,aAAa,CAACgB,MAAd,CAAqBJ,KAArB,EAA4B,CAA5B;AACA,UAAIH,gBAAJ,EAAsBA,gBAAgB,CAAC,CAAC,GAAGT,aAAJ,CAAD,CAAhB;AACvB;AACDQ,IAAAA,QAAQ,CAAES,IAAD,IAAU,CAACA,IAAZ,CAAR;AACAd,IAAAA,YAAY,CAACe,OAAb,CAAqB,eAArB,EAAsCjB,IAAI,CAACkB,SAAL,CAAenB,aAAf,CAAtC;AACD,GAbD;;AAcA,sBACE;AACE,IAAA,SAAS,EAAE,mBAAiBF,KAAK,GAAGA,KAAH,GAAW,EAAjC,CADb;AAEE,IAAA,GAAG,EAAES,KAAK,GAAGd,QAAH,GAAcD,WAF1B;AAGE,IAAA,OAAO,EAAEkB;AAHX;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAMd,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useCallback, useEffect, useState, useMemo,useContext } from \"react\";\r\nimport NotSelected from \"../../assets/images/favourite.png\";\r\nimport Selected from \"../../assets/images/favouriteActive.png\";\r\nimport {FavoriteBooksContext} from \"../../screens/Cabinet/index\";\r\nimport compare from \"../../functions/compare\";\r\nconst Hearth = ({data,style}) => {\r\n  const isInFavorites = useMemo(() => {\r\n    const favoriteBooks = JSON.parse(localStorage.getItem(\"favoriteBooks\"));\r\n    for (let i = 0; i < favoriteBooks.length; i++) {\r\n      if (compare(favoriteBooks[i], data)) return true;\r\n    }\r\n    return false;\r\n  },[]);\r\n  const [liked, setLiked] = useState(isInFavorites);\r\n  const setFavoriteBooks=useContext(FavoriteBooksContext);\r\n  const clickHandler = () => {\r\n    const favoriteBooks = JSON.parse(localStorage.getItem(\"favoriteBooks\"));\r\n    if (!liked) favoriteBooks.push(data);\r\n    else {\r\n      let index;\r\n      favoriteBooks.forEach((elem, ind) => {\r\n        if (compare(elem, data)) index = ind;\r\n      });\r\n      favoriteBooks.splice(index, 1);\r\n      if (setFavoriteBooks) setFavoriteBooks([...favoriteBooks]);\r\n    }\r\n    setLiked((curr) => !curr);\r\n    localStorage.setItem(\"favoriteBooks\", JSON.stringify(favoriteBooks));\r\n  };\r\n  return (\r\n    <img\r\n      className={\"book__hearth \"+(style ? style : \"\")}\r\n      src={liked ? Selected : NotSelected}\r\n      onClick={clickHandler}\r\n    />\r\n  );\r\n};\r\nexport default Hearth;"]},"metadata":{},"sourceType":"module"}