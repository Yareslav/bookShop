{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\screens\\\\Cabinet\\\\components\\\\Favorites.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef, useMemo, createContext } from \"react\";\nimport BookModeSwitcher from \"../../../globalComponents/BookModeSwitcher\";\nimport Input from \"../../../globalComponents/Input\";\nimport BookCard from \"../../../globalComponents/BookCard\";\nimport PageSlider from \"../../../globalComponents/PageSlider\";\nimport deleteDuplicates from \"../../../functions/deleteDuplicates\";\nimport NotFound from \"../../../assets/images/notFound.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Favorites = _ref => {\n  _s();\n\n  let {\n    favoriteBooks\n  } = _ref;\n  const [bookMode, setBookMode] = useState(\"normal\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [isFilterActive, setIsFilterActive] = useState(false);\n  const [nothingFound, setNothingFound] = useState(false);\n  const pages = useMemo(() => {\n    const books = (isFilterActive ? filteredBooks : favoriteBooks).map(elem => /*#__PURE__*/_jsxDEV(BookCard, {\n      data: elem,\n      mode: bookMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this));\n    const pages = [];\n    const iterations = Math.ceil(books.length / 16);\n\n    for (let i = 0; i < iterations; i++) {\n      pages.push(books.splice(0, 16));\n    }\n\n    return pages;\n  }, [bookMode, isFilterActive, favoriteBooks.length, filteredBooks.length]);\n  useEffect(() => {\n    let mass = [];\n\n    if (filterText == \"\") {\n      setIsFilterActive(false);\n      setNothingFound(false);\n      return;\n    }\n\n    if (!isFilterActive) setIsFilterActive(true);\n    setCurrentPage(0);\n\n    const slice = text => {\n      return text.slice(0, filterText.length).toLowerCase();\n    };\n\n    const filterBySlices = title => {\n      let data = favoriteBooks.filter(elem => {\n        let titles = elem[title].split(\" , \");\n\n        for (let i = 0; i < titles.length; i++) {\n          if (slice(titles[i]) == filterText.toLowerCase()) return true;\n        }\n      });\n      data = deleteDuplicates(data, mass);\n      mass.push(...data);\n    }; //!! by title\n\n\n    mass = favoriteBooks.filter(_ref2 => {\n      let {\n        title\n      } = _ref2;\n      return slice(title) == filterText.toLowerCase();\n    }); //!! by author\n\n    filterBySlices(\"authors\"); //!! by category\n\n    filterBySlices(\"categories\");\n    setFilteredBooks([...mass]);\n    if (mass.length == 0) setNothingFound(true);else if (nothingFound) setNothingFound(false);\n  }, [filterText, favoriteBooks.length]);\n  useEffect(() => {\n    if (!pages[currentPage]) setCurrentPage(pages.length - 1);\n  }, [pages.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cabinet__liked\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cabinet__header beet width\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Your liked books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cabinet__aligner beet\",\n        children: [/*#__PURE__*/_jsxDEV(BookModeSwitcher, {\n          data: bookMode,\n          setData: setBookMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          setData: setFilterText,\n          placeholder: \"type name , category , author of the book\",\n          style: \"cabinet-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), nothingFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"width beet2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Unfortunatelly 0 books was found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cabinet__body width\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: bookMode == \"normal\" ? \"grid\" : \"row\",\n        children: pages[currentPage]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), pages.length > 1 && /*#__PURE__*/_jsxDEV(PageSlider, {\n        currentPage,\n        setCurrentPage,\n        pagesLength: pages.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Favorites, \"OwP8ayYEUaO5VR83Lh5gyzrsarg=\");\n\n_c = Favorites;\nexport default Favorites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/screens/Cabinet/components/Favorites.js"],"names":["React","useState","useContext","useEffect","useRef","useMemo","createContext","BookModeSwitcher","Input","BookCard","PageSlider","deleteDuplicates","NotFound","Favorites","favoriteBooks","bookMode","setBookMode","filterText","setFilterText","currentPage","setCurrentPage","filteredBooks","setFilteredBooks","isFilterActive","setIsFilterActive","nothingFound","setNothingFound","pages","books","map","elem","iterations","Math","ceil","length","i","push","splice","mass","slice","text","toLowerCase","filterBySlices","title","data","filter","titles","split"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  createContext,\r\n} from \"react\";\r\nimport BookModeSwitcher from \"../../../globalComponents/BookModeSwitcher\";\r\nimport Input from \"../../../globalComponents/Input\";\r\nimport BookCard from \"../../../globalComponents/BookCard\";\r\nimport PageSlider from \"../../../globalComponents/PageSlider\";\r\nimport deleteDuplicates from \"../../../functions/deleteDuplicates\";\r\nimport NotFound from \"../../../assets/images/notFound.png\"\r\nconst Favorites = ({ favoriteBooks }) => {\r\n  const [bookMode, setBookMode] = useState(\"normal\");\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [filteredBooks, setFilteredBooks] = useState([]);\r\n  const [isFilterActive, setIsFilterActive] = useState(false);\r\n  const [nothingFound, setNothingFound] = useState(false);\r\n  const pages = useMemo(() => {\r\n    const books = (isFilterActive\r\n      ? filteredBooks\r\n      : favoriteBooks\r\n    ).map((elem) => <BookCard data={elem} mode={bookMode} />);\r\n    const pages = [];\r\n    const iterations = Math.ceil(books.length / 16);\r\n    for (let i = 0; i < iterations; i++) {\r\n      pages.push(books.splice(0, 16));\r\n    }\r\n    return pages;\r\n  }, [bookMode, isFilterActive, favoriteBooks.length, filteredBooks.length]);\r\n  useEffect(() => {\r\n    let mass = [];\r\n    if (filterText == \"\") {\r\n      setIsFilterActive(false);\r\n\t\t\tsetNothingFound(false);\r\n\t\t\treturn;\r\n    }\r\n    if (!isFilterActive) setIsFilterActive(true);\r\n    setCurrentPage(0);\r\n    const slice = (text) => {\r\n      return text.slice(0, filterText.length).toLowerCase();\r\n    };\r\n    const filterBySlices = (title) => {\r\n      let data = favoriteBooks.filter((elem) => {\r\n        let titles = elem[title].split(\" , \");\r\n        for (let i = 0; i < titles.length; i++) {\r\n          if (slice(titles[i]) == filterText.toLowerCase()) return true;\r\n        }\r\n      });\r\n      data = deleteDuplicates(data, mass);\r\n      mass.push(...data);\r\n    };\r\n    //!! by title\r\n    mass = favoriteBooks.filter(({ title }) => {\r\n      return slice(title) == filterText.toLowerCase();\r\n    });\r\n    //!! by author\r\n    filterBySlices(\"authors\");\r\n    //!! by category\r\n    filterBySlices(\"categories\");\r\n    setFilteredBooks([...mass]);\r\n    if (mass.length == 0) setNothingFound(true);\r\n    else if (nothingFound) setNothingFound(false);\r\n  }, [filterText, favoriteBooks.length]);\r\n  useEffect(() => {\r\n    if (!pages[currentPage]) setCurrentPage(pages.length - 1);\r\n  }, [pages.length]);\r\n  return (\r\n    <div className=\"cabinet__liked\">\r\n      <div className=\"cabinet__header beet width\">\r\n        <p className=\"title\">Your liked books</p>\r\n        <div className=\"cabinet__aligner beet\">\r\n          <BookModeSwitcher data={bookMode} setData={setBookMode} />\r\n          <Input\r\n            setData={setFilterText}\r\n            placeholder=\"type name , category , author of the book\"\r\n            style=\"cabinet-left\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {nothingFound ? (\r\n        <div className=\"popup center\">\r\n          <div className=\"width beet2\">\r\n            <img src={NotFound} />\r\n            <p>Unfortunatelly 0 books was found</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n\t\t\t\t\t<div className=\"cabinet__body width\">\r\n          <div className={bookMode == \"normal\" ? \"grid\" : \"row\"}>\r\n            {pages[currentPage]}\r\n          </div>\r\n          {pages.length > 1 && (\r\n            <PageSlider\r\n              {...{ currentPage, setCurrentPage }}\r\n              pagesLength={pages.length}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Favorites;\r\n"]},"metadata":{},"sourceType":"module"}