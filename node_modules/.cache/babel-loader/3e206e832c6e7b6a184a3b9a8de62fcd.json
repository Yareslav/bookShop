{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\screens\\\\SignIn\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport Input from \"../../globalComponents/Input\";\nimport Container from \"../../globalComponents/Container\";\nimport SignIn from \"../../assets/images/signIn.png\";\nimport { GenerateMistake, conditions } from \"../../globalComponents/Forms\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../assets/styles/signIn.css\";\nimport Show from \"../../assets/images/show.png\";\nimport Hide from \"../../assets/images/hide.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateSignInScreen = () => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [fullNameOrEmail, setFullNameOrEmail] = useState(\"\");\n  const [errors, setErrors] = useState({\n    password: false,\n    fullNameOrEmail: false,\n    general: false\n  });\n  const navigate = useNavigate();\n\n  const getRidOfErrors = (setErrors, errors, type, value) => {\n    if (!errors[type]) return;\n    errors[type] = conditions[type](value);\n    setErrors({ ...errors\n    });\n  };\n\n  const errorData = [null, setErrors, errors];\n\n  const submit = () => {\n    errors.password = conditions[\"password\"](password);\n    const isEmail = conditions[\"email\"](fullNameOrEmail);\n    const isFullName = conditions[\"fullName\"](fullNameOrEmail);\n    if (!isEmail && !isFullName) errors.fullNameOrEmail = true;else errors.fullNameOrEmail = false;\n\n    if (!errors.password && !errors.fullNameOrEmail) {\n      const type = isEmail ? \"email\" : \"fullName\";\n      const data = JSON.parse(localStorage.getItem(\"registrationData\"));\n      if (data.password != password || (type == \"email\" ? fullNameOrEmail != data.email : fullNameOrEmail != data.fullName)) errors.general = true;else {\n        errors.general = false;\n        localStorage.setItem(\"registrationData\", JSON.stringify({ ...data,\n          isSignedIn: true\n        }));\n        alert(\"Welcome\");\n        navigate(\"/cabinet\");\n      }\n    }\n\n    setErrors({ ...errors\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"screen__image\",\n      src: SignIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"screen-margin title align\",\n      children: \"Just one more step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-top width\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"blackTitle\",\n        children: \"FullName Or Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"34444444AAAaaqqqxxxz or John Doe\",\n        setData: setFullNameOrEmail,\n        style: errors.fullNameOrEmail && \"screen-formError\",\n        functionality: getRidOfErrors.bind(...errorData, \"fullNameOrEmail\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), errors.fullNameOrEmail && /*#__PURE__*/_jsxDEV(GenerateMistake, {\n        text: \"Full Name or email is wrong . Email must contain @ . and its length must be minimum 8 characters . Full Name must contain at least 5 characters and 2 words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password width\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setShowPassword(curr => !curr),\n        className: \"beet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: showPassword ? Show : Hide\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: showPassword ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-top width\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"blackTitle\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"34444444AAAaaqqqxxxz\",\n        setData: setPassword,\n        style: errors.password && \"screen-formError\",\n        hidePassword: !showPassword,\n        functionality: getRidOfErrors.bind(...errorData, \"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(GenerateMistake, {\n        text: \"Password must contain at least 8 letters , upperCase letters and numbers .\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), errors.general && /*#__PURE__*/_jsxDEV(GenerateMistake, {\n      text: \"Password or full name doesn`t match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button screen__button screen-margin\",\n      onClick: submit,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"screen__bigTitle\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateSignInScreen, \"DiNbodhBzOAKSWTDnoHQ4qYB/Po=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateSignInScreen;\nexport default CreateSignInScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSignInScreen\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/screens/SignIn/index.js"],"names":["React","useState","useContext","useEffect","useRef","Input","Container","SignIn","GenerateMistake","conditions","useNavigate","Show","Hide","CreateSignInScreen","showPassword","setShowPassword","password","setPassword","fullNameOrEmail","setFullNameOrEmail","errors","setErrors","general","navigate","getRidOfErrors","type","value","errorData","submit","isEmail","isFullName","data","JSON","parse","localStorage","getItem","email","fullName","setItem","stringify","isSignedIn","alert","bind","curr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,8BAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,gCAAP;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACD,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC;AAClCe,IAAAA,QAAQ,EAAE,KADwB;AAEpCE,IAAAA,eAAe,EAAE,KAFmB;AAGpCI,IAAAA,OAAO,EAAC;AAH4B,GAAD,CAApC;AAKC,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,cAAc,GAAG,CAACH,SAAD,EAAYD,MAAZ,EAAoBK,IAApB,EAA0BC,KAA1B,KAAoC;AACzD,QAAI,CAACN,MAAM,CAACK,IAAD,CAAX,EAAmB;AACnBL,IAAAA,MAAM,CAACK,IAAD,CAAN,GAAehB,UAAU,CAACgB,IAAD,CAAV,CAAiBC,KAAjB,CAAf;AACAL,IAAAA,SAAS,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAT;AACD,GAJD;;AAKA,QAAMO,SAAS,GAAG,CAAC,IAAD,EAAON,SAAP,EAAkBD,MAAlB,CAAlB;;AACA,QAAMQ,MAAM,GAAG,MAAM;AACrBR,IAAAA,MAAM,CAACJ,QAAP,GAAkBP,UAAU,CAAC,UAAD,CAAV,CAAuBO,QAAvB,CAAlB;AAEA,UAAMa,OAAO,GAACpB,UAAU,CAAC,OAAD,CAAV,CAAoBS,eAApB,CAAd;AACA,UAAMY,UAAU,GAACrB,UAAU,CAAC,UAAD,CAAV,CAAuBS,eAAvB,CAAjB;AACA,QAAI,CAACW,OAAD,IAAY,CAACC,UAAjB,EAA6BV,MAAM,CAACF,eAAP,GAAuB,IAAvB,CAA7B,KACKE,MAAM,CAACF,eAAP,GAAuB,KAAvB;;AAEH,QAAI,CAACE,MAAM,CAACJ,QAAR,IAAoB,CAACI,MAAM,CAACF,eAAhC,EAAkD;AACnD,YAAMO,IAAI,GAACI,OAAO,GAAG,OAAH,GAAa,UAA/B;AAEA,YAAME,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAAX;AAEA,UAAIJ,IAAI,CAACf,QAAL,IAAeA,QAAf,KAA4BS,IAAI,IAAE,OAAN,GAAiBP,eAAe,IAAEa,IAAI,CAACK,KAAvC,GAAiDlB,eAAe,IAAEa,IAAI,CAACM,QAAnG,CAAJ,EAAoHjB,MAAM,CAACE,OAAP,GAAe,IAAf,CAApH,KACK;AACJF,QAAAA,MAAM,CAACE,OAAP,GAAe,KAAf;AACAY,QAAAA,YAAY,CAACI,OAAb,CAAqB,kBAArB,EAAwCN,IAAI,CAACO,SAAL,CACvC,EAAC,GAAGR,IAAJ;AAASS,UAAAA,UAAU,EAAC;AAApB,SADuC,CAAxC;AAGAC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACAlB,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;AACD;;AACDF,IAAAA,SAAS,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAT;AACC,GAxBD;;AAyBA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAEb;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAED;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC,eAGD;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACK;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,kCADd;AAEE,QAAA,OAAO,EAAEY,kBAFX;AAGE,QAAA,KAAK,EAAEC,MAAM,CAACF,eAAP,IAA0B,kBAHnC;AAIE,QAAA,aAAa,EAAEM,cAAc,CAACkB,IAAf,CAAoB,GAAGf,SAAvB,EAAkC,iBAAlC;AAJjB;AAAA;AAAA;AAAA;AAAA,cAFL,EAQMP,MAAM,CAACF,eAAP,iBACC,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cATP;AAAA;AAAA;AAAA;AAAA;AAAA,YAHC,eAgBD;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACA;AAAK,QAAA,OAAO,EAAE,MAAIH,eAAe,CAAC4B,IAAI,IAAE,CAACA,IAAR,CAAjC;AAAgD,QAAA,SAAS,EAAC,MAA1D;AAAA,gCACC;AAAK,UAAA,GAAG,EAAE7B,YAAY,GAAGH,IAAH,GAAUC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,oBAAIE,YAAY,GAAG,MAAH,GAAY;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAhBC,eAuBE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,sBADd;AAEE,QAAA,OAAO,EAAEG,WAFX;AAGE,QAAA,KAAK,EAAEG,MAAM,CAACJ,QAAP,IAAmB,kBAH5B;AAIE,QAAA,YAAY,EAAE,CAACF,YAJjB;AAKE,QAAA,aAAa,EAAEU,cAAc,CAACkB,IAAf,CAAoB,GAAGf,SAAvB,EAAkC,UAAlC;AALjB;AAAA;AAAA;AAAA;AAAA,cAFF,EASGP,MAAM,CAACJ,QAAP,iBACC,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,EAoCAI,MAAM,CAACE,OAAP,iBAAkB,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YApClB,eAsCD;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAqD,MAAA,OAAO,EAAEM,MAA9D;AAAA,6BACC;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAtCC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAvFD;;GAAMf,kB;UASaH,W;;;KATbG,kB;AAwFN,eAAeA,kBAAf","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport Input from \"../../globalComponents/Input\";\r\nimport Container from \"../../globalComponents/Container\";\r\nimport SignIn from \"../../assets/images/signIn.png\";\r\nimport { GenerateMistake, conditions } from \"../../globalComponents/Forms\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../assets/styles/signIn.css\";\r\nimport Show from \"../../assets/images/show.png\";\r\nimport Hide from \"../../assets/images/hide.png\"\r\nconst CreateSignInScreen = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n\tconst [fullNameOrEmail, setFullNameOrEmail] = useState(\"\");\r\n\tconst [errors, setErrors] = useState({\r\n    password: false,\r\n\t\tfullNameOrEmail: false,\r\n\t\tgeneral:false\r\n  });\r\n  const navigate = useNavigate();\r\n  const getRidOfErrors = (setErrors, errors, type, value) => {\r\n    if (!errors[type]) return;\r\n    errors[type] = conditions[type](value);\r\n    setErrors({ ...errors });\r\n  };\r\n  const errorData = [null, setErrors, errors];\r\n  const submit = () => {\r\n\t\terrors.password = conditions[\"password\"](password);\r\n\r\n\t\tconst isEmail=conditions[\"email\"](fullNameOrEmail);\r\n\t\tconst isFullName=conditions[\"fullName\"](fullNameOrEmail);\r\n\t\tif (!isEmail && !isFullName) errors.fullNameOrEmail=true;\r\n\t\telse errors.fullNameOrEmail=false;\r\n\r\n    if (!errors.password && !errors.fullNameOrEmail ) {\r\n\t\t\tconst type=isEmail ? \"email\" : \"fullName\";\r\n\r\n\t\t\tconst data=JSON.parse(localStorage.getItem(\"registrationData\"));\r\n\r\n\t\t\tif (data.password!=password || (type==\"email\" ? (fullNameOrEmail!=data.email) : (fullNameOrEmail!=data.fullName)) ) errors.general=true;\r\n\t\t\telse {\r\n\t\t\t\terrors.general=false;\r\n\t\t\t\tlocalStorage.setItem(\"registrationData\",JSON.stringify(\r\n\t\t\t\t\t{...data,isSignedIn:true}\r\n\t\t\t\t))\r\n\t\t\t\talert(\"Welcome\");\r\n\t\t\t\tnavigate(\"/cabinet\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetErrors({ ...errors });\r\n  };\r\n  return (\r\n    <Container style=\"content\">\r\n      <img className=\"screen__image\" src={SignIn} />\r\n\t\t\t<p className=\"screen-margin title align\">Just one more step</p>\r\n\t\t\t<div className=\"screen-top width\">\r\n        <p className=\"blackTitle\">FullName Or Email</p>\r\n        <Input\r\n          placeholder=\"34444444AAAaaqqqxxxz or John Doe\"\r\n          setData={setFullNameOrEmail}\r\n          style={errors.fullNameOrEmail && \"screen-formError\"}\r\n          functionality={getRidOfErrors.bind(...errorData, \"fullNameOrEmail\")}\r\n        />\r\n        {errors.fullNameOrEmail && (\r\n          <GenerateMistake text=\"Full Name or email is wrong . Email must contain @ . and its length must be minimum 8 characters . Full Name must contain at least 5 characters and 2 words\" />\r\n        )}\r\n      </div>\r\n\r\n\t\t\t<div className=\"password width\">\r\n\t\t\t<div onClick={()=>setShowPassword(curr=>!curr)} className=\"beet\">\r\n\t\t\t\t<img src={showPassword ? Show : Hide}/>\r\n\t\t\t\t<p>{showPassword ? \"Hide\" : \"Show\"}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n      <div className=\"screen-top width\">\r\n        <p className=\"blackTitle\">Password</p>\r\n        <Input\r\n          placeholder=\"34444444AAAaaqqqxxxz\"\r\n          setData={setPassword}\r\n          style={errors.password && \"screen-formError\"}\r\n          hidePassword={!showPassword}\r\n          functionality={getRidOfErrors.bind(...errorData, \"password\")}\r\n        />\r\n        {errors.password && (\r\n          <GenerateMistake text=\"Password must contain at least 8 letters , upperCase letters and numbers .\" />\r\n        )}\r\n      </div>\r\n\t\t\t{errors.general && <GenerateMistake text=\"Password or full name doesn`t match\"/>}\r\n\r\n\t\t\t<div className=\"button screen__button screen-margin\" onClick={submit}>\r\n\t\t\t\t<p className=\"screen__bigTitle\">Sign In</p>\r\n\t\t\t</div>\r\n\r\n\r\n    </Container>\r\n  );\r\n};\r\nexport default CreateSignInScreen;\r\n"]},"metadata":{},"sourceType":"module"}