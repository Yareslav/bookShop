{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\screens\\\\PasswordGenerator\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef, createContext } from \"react\";\nimport Container from \"../../globalComponents/Container\";\nimport Secure from \"../../assets/images/secure.png\";\nimport \"../../assets/styles/passwordGenerator.css\";\nimport CheckBox from \"./components/CheckBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckBoxesContext = /*#__PURE__*/createContext();\n\nconst PasswordGenerator = () => {\n  _s();\n\n  const copyHandler = () => {};\n\n  const generatePasswordHandler = () => {};\n\n  const [includingData, setIncludingData] = useState({\n    lowerCase: true,\n    upperCase: false,\n    numbers: true,\n    symbols: false\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: \"generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Secure,\n      className: \"screen__image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"screen-margin title generator__center\",\n      children: \"Generate a strong password with our generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator__grid screen-margin\",\n      children: /*#__PURE__*/_jsxDEV(CheckBoxesContext.Provider, {\n        value: [includingData, setIncludingData],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include lowercase : (a,b,c,d,e,f)\",\n            type: \"lowerCase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include uppercase : (A,B,C,D,E,F)\",\n            type: \"upperCase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include numbers : (0,1,2,3,4,5,6,...)\",\n            type: \"numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include symbols : (@,#,&,<,-,+,{,...)\",\n            type: \"symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Password Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button screen__button\",\n      onClick: generatePasswordHandler,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"screen__bigTitle screen-margin\",\n        children: \"Create Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator__menu beet screen-margin\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"blackTitle generator__title\",\n        children: \"Your password :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"generator__output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generator__copy button\",\n        onClick: copyHandler,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordGenerator, \"PFKHWA/nRZaH94y9y0yFuF2ZWdw=\");\n\n_c = PasswordGenerator;\nexport default PasswordGenerator;\n\nconst Ball = (props, results) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"thumb-0\",\n  ...props,\n  children: results\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this);\n/*<ReactSlider\r\n  defaultValue={maxResults}\r\n  min={1}\r\n  max={600}\r\n  onChange={(data) => setMaxResults(data)}\r\n  renderThumb={(props) => <Ball props={props} results={results} />}\r\n/>;*/\n\n\n_c2 = Ball;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PasswordGenerator\");\n$RefreshReg$(_c2, \"Ball\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/screens/PasswordGenerator/index.js"],"names":["React","useState","useContext","useEffect","useRef","createContext","Container","Secure","CheckBox","CheckBoxesContext","PasswordGenerator","copyHandler","generatePasswordHandler","includingData","setIncludingData","lowerCase","upperCase","numbers","symbols","Ball","props","results"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  createContext,\r\n} from \"react\";\r\nimport Container from \"../../globalComponents/Container\";\r\nimport Secure from \"../../assets/images/secure.png\";\r\nimport \"../../assets/styles/passwordGenerator.css\";\r\nimport CheckBox from \"./components/CheckBox\";\r\nexport const CheckBoxesContext = createContext();\r\nconst PasswordGenerator = () => {\r\n  const copyHandler = () => {};\r\n  const generatePasswordHandler = () => {};\r\n  const [includingData, setIncludingData] = useState({\r\n    lowerCase: true,\r\n    upperCase: false,\r\n    numbers: true,\r\n    symbols: false,\r\n  });\r\n  return (\r\n    <Container style=\"generator\">\r\n      <img src={Secure} className=\"screen__image\" />\r\n      <p className=\"screen-margin title generator__center\">\r\n        Generate a strong password with our generator\r\n      </p>\r\n      <div className=\"generator__grid screen-margin\">\r\n        <CheckBoxesContext.Provider value={[includingData, setIncludingData]}>\r\n          <div>\r\n            <p className=\"blackTitle\">Letters</p>\r\n            <CheckBox\r\n              text=\"include lowercase : (a,b,c,d,e,f)\"\r\n              type=\"lowerCase\"\r\n            />\r\n            <CheckBox\r\n              text=\"include uppercase : (A,B,C,D,E,F)\"\r\n              type=\"upperCase\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"blackTitle\">Numbers</p>\r\n            <CheckBox\r\n              text=\"include numbers : (0,1,2,3,4,5,6,...)\"\r\n              type=\"numbers\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"blackTitle\">Symbols</p>\r\n            <CheckBox\r\n              text=\"include symbols : (@,#,&,<,-,+,{,...)\"\r\n              type=\"symbols\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"blackTitle\">Password Length</p>\r\n          </div>\r\n        </CheckBoxesContext.Provider>\r\n      </div>\r\n      <div className=\"button screen__button\" onClick={generatePasswordHandler}>\r\n        <p className=\"screen__bigTitle screen-margin\">Create Password</p>\r\n      </div>\r\n      <div className=\"generator__menu beet screen-margin\">\r\n        <p className=\"blackTitle generator__title\">Your password :</p>\r\n        <input type=\"text\" className=\"generator__output\" />\r\n        <div className=\"generator__copy button\" onClick={copyHandler}>\r\n          <p>Copy</p>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default PasswordGenerator;\r\nconst Ball = (props, results) => (\r\n  <div className=\"thumb-0\" {...props}>\r\n    {results}\r\n  </div>\r\n);\r\n/*<ReactSlider\r\n  defaultValue={maxResults}\r\n  min={1}\r\n  max={600}\r\n  onChange={(data) => setMaxResults(data)}\r\n  renderThumb={(props) => <Ball props={props} results={results} />}\r\n/>;*/\r\n"]},"metadata":{},"sourceType":"module"}