{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\screens\\\\SignIn\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport Input from \"../../globalComponents/Input\";\nimport Container from \"../../globalComponents/Container\";\nimport SignIn from \"../../assets/images/signIn.png\";\nimport { GenerateMistake, conditions } from \"../../globalComponents/Forms\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../assets/styles/signIn.css\";\nimport Show from \"../../assets/images/show.png\";\nimport Hide from \"../../assets/images/hide.png\";\nimport { NavigateContext } from \"../../App\";\nimport { WindowContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateSignInScreen = () => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [fullNameOrEmail, setFullNameOrEmail] = useState(\"\");\n  const [errors, setErrors] = useState({\n    password: false,\n    fullNameOrEmail: false,\n    general: false\n  });\n  const manageWindow = useContext(WindowContext);\n  const navigator = useNavigate();\n  const navigate = useContext(NavigateContext);\n  const errorData = [null, setErrors, errors];\n  const isInputDataAnEmail = !conditions[\"email\"](fullNameOrEmail);\n\n  const getRidOfErrors = (setErrors, errors, type, value) => {\n    if (!errors[type]) return;\n\n    if (type == \"fullNameOrEmail\") {\n      errors[type] = isInputDataAnEmail ? conditions[\"email\"](value) : conditions[\"fullName\"](value);\n    } else errors[type] = conditions[type](value);\n\n    setErrors({ ...errors\n    });\n  };\n\n  const submit = () => {\n    const isInputDataAnFullName = !conditions[\"fullName\"](fullNameOrEmail);\n    errors.password = conditions[\"password\"](password);\n    if (!isInputDataAnEmail && !isInputDataAnFullName) errors.fullNameOrEmail = true;else errors.fullNameOrEmail = false;\n\n    if (!errors.password && !errors.fullNameOrEmail) {\n      const type = isInputDataAnEmail ? \"email\" : \"fullName\";\n      const data = JSON.parse(localStorage.getItem(\"registrationData\"));\n      if (data.password != password || (type == \"email\" ? fullNameOrEmail != data.email : fullNameOrEmail != data.fullName)) errors.general = true;else {\n        errors.general = false;\n        localStorage.setItem(\"registrationData\", JSON.stringify({ ...data,\n          isSignedIn: true\n        }));\n        manageWindow(\"Welcome\", false);\n        navigate(navigator, \"/cabinet\");\n      }\n    }\n\n    setErrors({ ...errors\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"screen__image\",\n      src: SignIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"screen-margin title align\",\n      children: \"Just one more step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-top width\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"blackTitle\",\n        children: \"FullName Or Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"34444444AAAaaqqqxxxz or John Doe\",\n        setData: setFullNameOrEmail,\n        style: errors.fullNameOrEmail && \"screen-formError\",\n        functionality: getRidOfErrors.bind(...errorData, \"fullNameOrEmail\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), errors.fullNameOrEmail && /*#__PURE__*/_jsxDEV(GenerateMistake, {\n        text: \"Full Name or email is wrong . Email must contain @ . and its length must be minimum 8 characters . Full Name must contain at least 5 characters and 2 words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password width\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setShowPassword(curr => !curr),\n        className: \"beet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: showPassword ? Show : Hide\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: showPassword ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-top width\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"blackTitle\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"34444444AAAaaqqqxxxz\",\n        setData: setPassword,\n        style: errors.password && \"screen-formError\",\n        hidePassword: !showPassword,\n        functionality: getRidOfErrors.bind(...errorData, \"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(GenerateMistake, {\n        text: \"Password must contain at least 8 letters , upperCase letters and numbers .\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), errors.general && /*#__PURE__*/_jsxDEV(GenerateMistake, {\n      text: \"Password or full name doesn`t match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button screen__button screen-margin\",\n      onClick: submit,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"screen__bigTitle\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateSignInScreen, \"IOlWPbbq+8+4bYO4bJdZNt970Pg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateSignInScreen;\nexport default CreateSignInScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSignInScreen\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/screens/SignIn/index.js"],"names":["React","useState","useContext","useEffect","useRef","Input","Container","SignIn","GenerateMistake","conditions","useNavigate","Show","Hide","NavigateContext","WindowContext","CreateSignInScreen","showPassword","setShowPassword","password","setPassword","fullNameOrEmail","setFullNameOrEmail","errors","setErrors","general","manageWindow","navigator","navigate","errorData","isInputDataAnEmail","getRidOfErrors","type","value","submit","isInputDataAnFullName","data","JSON","parse","localStorage","getItem","email","fullName","setItem","stringify","isSignedIn","bind","curr"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport Input from \"../../globalComponents/Input\";\r\nimport Container from \"../../globalComponents/Container\";\r\nimport SignIn from \"../../assets/images/signIn.png\";\r\nimport { GenerateMistake, conditions } from \"../../globalComponents/Forms\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../assets/styles/signIn.css\";\r\nimport Show from \"../../assets/images/show.png\";\r\nimport Hide from \"../../assets/images/hide.png\";\r\nimport {NavigateContext} from \"../../App\";\r\nimport {WindowContext} from \"../../App\";\r\nconst CreateSignInScreen = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fullNameOrEmail, setFullNameOrEmail] = useState(\"\");\r\n  const [errors, setErrors] = useState({\r\n    password: false,\r\n    fullNameOrEmail: false,\r\n    general: false,\r\n  });\r\n  const manageWindow=useContext(WindowContext);\r\n  const navigator = useNavigate();\r\n  const navigate=useContext(NavigateContext);\r\n\r\n  const errorData = [null, setErrors, errors];\r\n  const isInputDataAnEmail = !conditions[\"email\"](fullNameOrEmail);\r\n\r\n  const getRidOfErrors = (setErrors, errors, type, value) => {\r\n\t\tif (!errors[type]) return;\r\n\t\tif (type==\"fullNameOrEmail\") {\r\n      errors[type]=isInputDataAnEmail ? conditions[\"email\"](value) : conditions[\"fullName\"](value);\r\n    }\r\n    else errors[type] = conditions[type](value);\r\n    setErrors({ ...errors });\r\n  };\r\n\r\n  const submit = () => {\r\n    const isInputDataAnFullName = !conditions[\"fullName\"](fullNameOrEmail);\r\n\r\n    errors.password = conditions[\"password\"](password);\r\n    if (!isInputDataAnEmail && !isInputDataAnFullName) errors.fullNameOrEmail = true;\r\n    else errors.fullNameOrEmail = false;\r\n\r\n    if (!errors.password && !errors.fullNameOrEmail) {\r\n      const type = isInputDataAnEmail ? \"email\" : \"fullName\";\r\n      const data = JSON.parse(localStorage.getItem(\"registrationData\"));\r\n\r\n      if (\r\n        data.password != password ||\r\n        (type == \"email\"\r\n          ? fullNameOrEmail != data.email\r\n          : fullNameOrEmail != data.fullName)\r\n      )\r\n        errors.general = true;\r\n      else {\r\n        errors.general = false;\r\n        localStorage.setItem(\r\n          \"registrationData\",\r\n          JSON.stringify({ ...data, isSignedIn: true })\r\n        );\r\n        manageWindow(\"Welcome\",false);\r\n        navigate(navigator,\"/cabinet\");\r\n      }\r\n    }\r\n    setErrors({ ...errors });\r\n  };\r\n\r\n  return (\r\n    <Container style=\"content\">\r\n      <img className=\"screen__image\" src={SignIn} />\r\n      <p className=\"screen-margin title align\">Just one more step</p>\r\n      <div className=\"screen-top width\">\r\n        <p className=\"blackTitle\">FullName Or Email</p>\r\n        <Input\r\n          placeholder=\"34444444AAAaaqqqxxxz or John Doe\"\r\n          setData={setFullNameOrEmail}\r\n          style={errors.fullNameOrEmail && \"screen-formError\"}\r\n          functionality={getRidOfErrors.bind(...errorData, \"fullNameOrEmail\")}\r\n        />\r\n        {errors.fullNameOrEmail && (\r\n          <GenerateMistake text=\"Full Name or email is wrong . Email must contain @ . and its length must be minimum 8 characters . Full Name must contain at least 5 characters and 2 words\" />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"password width\">\r\n        <div onClick={() => setShowPassword((curr) => !curr)} className=\"beet\">\r\n          <img src={showPassword ? Show : Hide} />\r\n          <p>{showPassword ? \"Hide\" : \"Show\"}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"screen-top width\">\r\n        <p className=\"blackTitle\">Password</p>\r\n        <Input\r\n          placeholder=\"34444444AAAaaqqqxxxz\"\r\n          setData={setPassword}\r\n          style={errors.password && \"screen-formError\"}\r\n          hidePassword={!showPassword}\r\n          functionality={getRidOfErrors.bind(...errorData, \"password\")}\r\n        />\r\n        {errors.password && (\r\n          <GenerateMistake text=\"Password must contain at least 8 letters , upperCase letters and numbers .\" />\r\n        )}\r\n      </div>\r\n      {errors.general && (\r\n        <GenerateMistake text=\"Password or full name doesn`t match\" />\r\n      )}\r\n\r\n      <div className=\"button screen__button screen-margin\" onClick={submit}>\r\n        <p className=\"screen__bigTitle\">Sign In</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default CreateSignInScreen;"]},"metadata":{},"sourceType":"module"}