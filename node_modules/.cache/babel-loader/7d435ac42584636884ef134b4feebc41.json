{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\screens\\\\Main\\\\components\\\\Article.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport Input from \"../../../globalComponents/Input\";\nimport ReactSlider from \"react-slider\";\nimport fetcher from \"../../../functions/fetcher\";\nimport compare from \"../../../functions/compare\";\nimport formater from \"../../../functions/formater\";\nimport random from \"../../../functions/random\";\nimport { SearchContext } from \"../../../App\";\nimport BookModeSwitcher from \"../../../globalComponents/BookModeSwitcher\";\nimport Sorter from \"./Sorter\";\nimport Radio from \"./Radio\";\nimport { SortContext } from \"../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Article = _ref => {\n  _s();\n\n  let {\n    setFoundItems,\n    foundItems,\n    setBookView,\n    bookView,\n    nothingFound,\n    setNothingFound,\n    setLoading,\n    setSortedItems\n  } = _ref;\n  const [bookName, setBookName] = useState(\"\");\n  const [maxResults, setMaxResults] = useState(300);\n  const [bookType, setBookType] = useState(\"all\");\n  const [author, setAuthor] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [publisher, setPublisher] = useState(\"\");\n  const {\n    searchActive,\n    setSearchActive\n  } = useContext(SearchContext);\n  const {\n    Sort\n  } = useContext(SortContext);\n  const requestTimeout = useRef();\n\n  class Request {\n    //notCompletedRequests;\n    constructor() {\n      clearTimeout(requestTimeout.current);\n      if (bookName == \"\") return;\n      requestTimeout.current = setTimeout(() => {\n        setFoundItems([]);\n        foundItems = [];\n        setLoading(true);\n        if (!searchActive) setSearchActive(true);\n        this.search();\n      }, 1500);\n    }\n\n    async search() {\n      let results = [];\n      let totalIterations = 0;\n\n      try {\n        const response = await this.request(0);\n        let {\n          items = [],\n          totalItems\n        } = await response.json();\n        if (totalItems == 0) throw new Error(\"nothing was found\");\n        totalIterations = Math.ceil((maxResults >= totalItems ? totalItems : maxResults) / 40);\n        items = this.format(items.slice(0, maxResults)); //setFoundItems([...items]);\n\n        results.push(...items);\n        if (nothingFound) setNothingFound(false); // if (totalIterations!=1) this.notCompletedRequests=totalIterations-1;\n        // else this.onRequestFinished();\n\n        setSortedItems([]);\n      } catch (error) {\n        setNothingFound(true);\n        console.error(error);\n      } //for (let i=1;i<totalIterations;i++) {}this.fastRequest(i);\n\n\n      for (let i = 1; i < totalIterations; i++) {\n        let mass = [];\n\n        try {\n          const response = await this.request(40 * i);\n          let {\n            items = []\n          } = await response.json();\n          mass = items;\n        } catch (error) {\n          console.error(error);\n        }\n\n        mass = this.format(mass.slice(0, maxResults - results.length));\n        mass = this.deleteDuplicates(mass, results);\n        results.push(...mass);\n      }\n\n      this.onRequestFinished();\n      setFoundItems([...results]);\n    }\n\n    request(startIndex) {\n      let options = [{\n        data: author,\n        type: \"inauthor\"\n      }, {\n        data: category,\n        type: \"subject\"\n      }, {\n        data: publisher,\n        type: \"inpublisher\"\n      }];\n      options = options.filter(_ref2 => {\n        let {\n          data\n        } = _ref2;\n        return data != \"\";\n      });\n      const strWithDeletedSpaces = bookName.split(\" \").join();\n      return fetcher(strWithDeletedSpaces, options, bookType, startIndex);\n    }\n    /*async fastRequest(index) {\r\n      let results=[];\r\n      try {\r\n        const response=await this.request(40*index);\r\n        let {items=[]}=await response.json();\r\n        results=items;\r\n      } catch(error) {\r\n        console.error(error)\r\n      }\r\n      //!!corrects bag\r\n      let found=[];\r\n        setFoundItems(curr=>{\r\n          found=curr;\r\n          return curr;\r\n        });\r\n        results=this.format(results.slice(0,maxResults-found.length));\r\n        results=this.deleteDuplicates(results,found);\r\n        setFoundItems(curr=>[...curr,...results]);\r\n        this.notCompletedRequests--;\r\n        if (this.notCompletedRequests===0) this.onRequestFinished();\r\n    }*/\n\n\n    format(items) {\n      return items.map(elem => formater(elem));\n    }\n\n    onRequestFinished() {\n      setLoading(false);\n      setTimeout(() => {\n        new Sort();\n      }, 0);\n    }\n\n    deleteDuplicates(results, found) {\n      return results.filter(elem => {\n        for (let i = 0; i < found.length; i++) {\n          if (compare(elem, found[i])) {\n            console.log(\"copy was found\");\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n\n  }\n\n  useEffect(() => {\n    new Request();\n  }, [bookName, bookType, maxResults, author, category, publisher]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"main__article beet2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"main__title blackTitle\",\n      children: \"Search for books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"type the name of the book\",\n      style: \"main__mainInput\",\n      setData: setBookName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"main__text main-margin\",\n        children: \"Max Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        defaultValue: maxResults,\n        min: 1,\n        max: 600,\n        onChange: data => setMaxResults(data),\n        renderThumb: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumb-0\",\n          ...props,\n          children: maxResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__radioButtons\",\n      children: [/*#__PURE__*/_jsxDEV(Radio, {\n        type: \"all\",\n        setData: setBookType,\n        data: bookType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radio, {\n        type: \"ebooks\",\n        setData: setBookType,\n        data: bookType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radio, {\n        type: \"free-ebooks\",\n        setData: setBookType,\n        data: bookType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radio, {\n        type: \"paid-ebooks\",\n        setData: setBookType,\n        data: bookType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"J K Rowling\",\n        setData: setAuthor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Fantasy\",\n        setData: setCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Publisher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"RELX\",\n        setData: setPublisher\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), searchActive && foundItems.length != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width beet2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"main__title blackTitle\",\n        children: \"Manage Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BookModeSwitcher, {\n        setData: setBookView,\n        data: bookView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"width beet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__sorters beet\",\n        children: [/*#__PURE__*/_jsxDEV(Sorter, {\n          type: \"money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sorter, {\n          type: \"rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sorter, {\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Article, \"8+XcWlSsyXuyBSLvpR0hf9CiMMA=\");\n\n_c = Article;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/screens/Main/components/Article.js"],"names":["React","useState","useContext","useEffect","useRef","Input","ReactSlider","fetcher","compare","formater","random","SearchContext","BookModeSwitcher","Sorter","Radio","SortContext","Article","setFoundItems","foundItems","setBookView","bookView","nothingFound","setNothingFound","setLoading","setSortedItems","bookName","setBookName","maxResults","setMaxResults","bookType","setBookType","author","setAuthor","category","setCategory","publisher","setPublisher","searchActive","setSearchActive","Sort","requestTimeout","Request","constructor","clearTimeout","current","setTimeout","search","results","totalIterations","response","request","items","totalItems","json","Error","Math","ceil","format","slice","push","error","console","i","mass","length","deleteDuplicates","onRequestFinished","startIndex","options","data","type","filter","strWithDeletedSpaces","split","join","map","elem","found","log","props"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport Input from \"../../../globalComponents/Input\";\r\nimport ReactSlider from \"react-slider\";\r\nimport fetcher from \"../../../functions/fetcher\";\r\nimport compare from \"../../../functions/compare\";\r\nimport formater from \"../../../functions/formater\";\r\nimport random from \"../../../functions/random\";\r\nimport { SearchContext } from \"../../../App\";\r\nimport BookModeSwitcher from \"../../../globalComponents/BookModeSwitcher\";\r\nimport Sorter from \"./Sorter\";\r\nimport Radio from \"./Radio\";\r\nimport {SortContext} from \"../index\";\r\nconst Article = ({setFoundItems, foundItems,setBookView,bookView,nothingFound,setNothingFound,setLoading,setSortedItems }) => {\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [maxResults, setMaxResults] = useState(300);\r\n  const [bookType, setBookType] = useState(\"all\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [publisher, setPublisher] = useState(\"\");\r\n  const { searchActive, setSearchActive } = useContext(SearchContext);\r\n  const {Sort} =useContext(SortContext);\r\n  const requestTimeout = useRef();\r\n  class Request {\r\n    //notCompletedRequests;\r\n    constructor() {\r\n      clearTimeout(requestTimeout.current);\r\n      if (bookName == \"\") return;\r\n      requestTimeout.current = setTimeout(() => {\r\n        setFoundItems([]);\r\n        foundItems=[];\r\n        setLoading(true);\r\n        if (!searchActive) setSearchActive(true);\r\n\t\t\t\tthis.search();\r\n      }, 1500);\r\n    }\r\n    async search() {\r\n      let results=[];\r\n      let totalIterations=0;\r\n\r\n      try {\r\n        const response=await this.request(0);\r\n        let {items=[],totalItems}=await response.json();\r\n        if (totalItems==0) throw new Error(\"nothing was found\");\r\n        totalIterations=Math.ceil((maxResults>=totalItems ? totalItems : maxResults)/40);\r\n\r\n        items=this.format(items.slice(0,maxResults));\r\n        //setFoundItems([...items]);\r\n        results.push(...items)\r\n        if (nothingFound) setNothingFound(false);\r\n        // if (totalIterations!=1) this.notCompletedRequests=totalIterations-1;\r\n        // else this.onRequestFinished();\r\n        setSortedItems([]);\r\n      } catch (error) {\r\n        setNothingFound(true);\r\n        console.error(error);\r\n      }\r\n      //for (let i=1;i<totalIterations;i++) {}this.fastRequest(i);\r\n\r\n      for (let i=1;i<totalIterations;i++) {\r\n        let mass=[];\r\n        try {\r\n          const response=await this.request(40*i);\r\n          let {items=[]}=await response.json();\r\n          mass=items;\r\n        } catch(error) {\r\n          console.error(error)\r\n        }\r\n        mass=this.format(mass.slice(0,maxResults-results.length));\r\n        mass=this.deleteDuplicates(mass,results);\r\n        results.push(...mass);\r\n      }\r\n      this.onRequestFinished();\r\n      setFoundItems([...results]);\r\n    }\r\n    request(startIndex) {\r\n      let options=[\r\n        { data: author, type: \"inauthor\" },\r\n        { data: category, type: \"subject\" },\r\n        { data: publisher, type: \"inpublisher\" }\r\n      ]\r\n      options=options.filter(({data})=>data!=\"\");\r\n      const strWithDeletedSpaces=bookName.split(\" \").join();\r\n      return fetcher(strWithDeletedSpaces,options,bookType,startIndex);\r\n    }\r\n    /*async fastRequest(index) {\r\n      let results=[];\r\n      try {\r\n        const response=await this.request(40*index);\r\n        let {items=[]}=await response.json();\r\n        results=items;\r\n      } catch(error) {\r\n        console.error(error)\r\n      }\r\n      //!!corrects bag\r\n      let found=[];\r\n        setFoundItems(curr=>{\r\n          found=curr;\r\n          return curr;\r\n        });\r\n        results=this.format(results.slice(0,maxResults-found.length));\r\n        results=this.deleteDuplicates(results,found);\r\n        setFoundItems(curr=>[...curr,...results]);\r\n        this.notCompletedRequests--;\r\n        if (this.notCompletedRequests===0) this.onRequestFinished();\r\n    }*/\r\n    format(items) {\r\n      return items.map(elem=>formater(elem));\r\n    }\r\n    onRequestFinished() {\r\n      setLoading(false);\r\n      setTimeout(()=>{\r\n        new Sort();\r\n      },0)\r\n    }\r\n    deleteDuplicates(results,found) {\r\n      return results.filter((elem)=>{\r\n        for (let i=0;i<found.length;i++) {\r\n          if (compare(elem,found[i])) {\r\n            console.log(\"copy was found\");\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    new Request();\r\n  },[bookName,bookType,maxResults,author,category,publisher]);\r\n  return (\r\n    <article className=\"main__article beet2\">\r\n      <p className=\"main__title blackTitle\">Search for books</p>\r\n      <Input\r\n        placeholder=\"type the name of the book\"\r\n        style=\"main__mainInput\"\r\n        setData={setBookName}\r\n      />\r\n      <div className=\"width\">\r\n        <p className=\"main__text main-margin\">Max Number</p>\r\n        <ReactSlider\r\n          defaultValue={maxResults}\r\n          min={1}\r\n          max={600}\r\n          onChange={(data) => setMaxResults(data)}\r\n          renderThumb={(props) => (\r\n            <div className=\"thumb-0\" {...props}>\r\n              {maxResults}\r\n            </div>\r\n          )}\r\n        />\r\n      </div>\r\n      <div className=\"main__radioButtons\">\r\n        <Radio type=\"all\" setData={setBookType} data={bookType} />\r\n        <Radio type=\"ebooks\" setData={setBookType} data={bookType} />\r\n        <Radio type=\"free-ebooks\" setData={setBookType} data={bookType} />\r\n        <Radio type=\"paid-ebooks\" setData={setBookType} data={bookType} />\r\n      </div>\r\n      <div className=\"main__container\">\r\n        <p>Author</p>\r\n        <Input placeholder=\"J K Rowling\" setData={setAuthor} />\r\n      </div>\r\n      <div className=\"main__container\">\r\n        <p>Category</p>\r\n        <Input placeholder=\"Fantasy\" setData={setCategory} />\r\n      </div>\r\n      <div className=\"main__container\">\r\n        <p>Publisher</p>\r\n        <Input placeholder=\"RELX\" setData={setPublisher} />\r\n      </div>\r\n      {(searchActive && foundItems.length!=0) && <div className=\"width beet2\">\r\n        <p className=\"main__title blackTitle\">Manage Selected</p>\r\n        <BookModeSwitcher setData={setBookView} data={bookView}/>\r\n        <div className=\"width beet\"></div>\r\n        <div className=\"main__sorters beet\">\r\n          <Sorter type=\"money\"/>\r\n          <Sorter type=\"rating\"/>\r\n          <Sorter type=\"date\"/>\r\n        </div>\r\n      </div>}\r\n    </article>\r\n  );\r\n};\r\nexport default Article;"]},"metadata":{},"sourceType":"module"}