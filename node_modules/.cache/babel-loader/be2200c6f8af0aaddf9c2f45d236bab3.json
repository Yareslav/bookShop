{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\screens\\\\PasswordGenerator\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef, createContext } from \"react\";\nimport Container from \"../../globalComponents/Container\";\nimport Secure from \"../../assets/images/secure.png\";\nimport \"../../assets/styles/passwordGenerator.css\";\nimport CheckBox from \"./components/CheckBox\";\nimport ReactSlider from \"react-slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckBoxesContext = /*#__PURE__*/createContext();\n\nconst PasswordGenerator = () => {\n  _s();\n\n  const copyHandler = () => {\n    navigator.clipboard.writeText(result);\n  };\n\n  const generatePasswordHandler = () => {};\n\n  const [includingData, setIncludingData] = useState({\n    lowerCase: true,\n    upperCase: false,\n    numbers: true,\n    symbols: false\n  });\n  const [passwordLength, setPasswordLength] = useState(20);\n  const [lettersFrequency, setLettersFrequency] = useState(50);\n  const [numbersFrequency, setNumbersFrequency] = useState(50);\n  const [result, setResult] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: \"generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Secure,\n      className: \"screen__image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"screen-margin title generator__center\",\n      children: \"Generate a strong password with our generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator__grid screen-margin\",\n      children: /*#__PURE__*/_jsxDEV(CheckBoxesContext.Provider, {\n        value: [includingData, setIncludingData],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include lowercase : (a,b,c,d,e,f)\",\n            type: \"lowerCase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include uppercase : (A,B,C,D,E,F)\",\n            type: \"upperCase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include numbers : (0,1,2,3,4,5,6,...)\",\n            type: \"numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            text: \"include symbols : (@,#,&,<,-,+,{,...)\",\n            type: \"symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blackTitle\",\n            children: \"Password length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n            defaultValue: passwordLength,\n            min: 5,\n            max: 90,\n            onChange: data => setPasswordLength(data),\n            renderThumb: props => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thumb-0\",\n              ...props,\n              children: passwordLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-margin button screen__button\",\n      onClick: generatePasswordHandler,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"screen__bigTitle \",\n        children: \"Create Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator__menu beet screen-margin\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"blackTitle generator__title\",\n        children: \"Your password :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"generator__output\",\n        value: result,\n        onChange: eve => setResult(eve.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generator__copy button\",\n        onClick: copyHandler,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordGenerator, \"WIKCZZqyhhOjyzc+2a5lbdQ/Eo8=\");\n\n_c = PasswordGenerator;\nexport default PasswordGenerator;\n/*<ReactSlider\r\n  defaultValue={maxResults}\r\n  min={1}\r\n  max={600}\r\n  onChange={(data) => setMaxResults(data)}\r\n  renderThumb={(props) => <Ball props={props} results={results} />}\r\n/>;*/\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordGenerator\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/screens/PasswordGenerator/index.js"],"names":["React","useState","useContext","useEffect","useRef","createContext","Container","Secure","CheckBox","ReactSlider","CheckBoxesContext","PasswordGenerator","copyHandler","navigator","clipboard","writeText","result","generatePasswordHandler","includingData","setIncludingData","lowerCase","upperCase","numbers","symbols","passwordLength","setPasswordLength","lettersFrequency","setLettersFrequency","numbersFrequency","setNumbersFrequency","setResult","data","props","eve","target","value"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  createContext,\r\n} from \"react\";\r\nimport Container from \"../../globalComponents/Container\";\r\nimport Secure from \"../../assets/images/secure.png\";\r\nimport \"../../assets/styles/passwordGenerator.css\";\r\nimport CheckBox from \"./components/CheckBox\";\r\nimport ReactSlider from \"react-slider\";\r\nexport const CheckBoxesContext = createContext();\r\nconst PasswordGenerator = () => {\r\n  const copyHandler = () => {\r\n\t\tnavigator.clipboard.writeText(result);\r\n\t};\r\n  const generatePasswordHandler = () => {};\r\n  const [includingData, setIncludingData] = useState({\r\n    lowerCase: true,\r\n    upperCase: false,\r\n    numbers: true,\r\n    symbols: false,\r\n  });\r\n\tconst [passwordLength, setPasswordLength] = useState(20);\r\n\tconst [lettersFrequency,setLettersFrequency]=useState(50);\r\n\tconst [numbersFrequency,setNumbersFrequency]=useState(50);\r\n\tconst [result,setResult]=useState(\"\");\r\n  return (\r\n    <Container style=\"generator\">\r\n      <img src={Secure} className=\"screen__image\" />\r\n      <p className=\"screen-margin title generator__center\">\r\n        Generate a strong password with our generator\r\n      </p>\r\n      <div className=\"generator__grid screen-margin\">\r\n        <CheckBoxesContext.Provider value={[includingData, setIncludingData]}>\r\n          <div>\r\n            <p className=\"blackTitle\">Letters</p>\r\n            <CheckBox\r\n              text=\"include lowercase : (a,b,c,d,e,f)\"\r\n              type=\"lowerCase\"\r\n            />\r\n            <CheckBox\r\n              text=\"include uppercase : (A,B,C,D,E,F)\"\r\n              type=\"upperCase\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"blackTitle\">Numbers</p>\r\n            <CheckBox\r\n              text=\"include numbers : (0,1,2,3,4,5,6,...)\"\r\n              type=\"numbers\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"blackTitle\">Symbols</p>\r\n            <CheckBox\r\n              text=\"include symbols : (@,#,&,<,-,+,{,...)\"\r\n              type=\"symbols\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"blackTitle\">Password length</p>\r\n            <ReactSlider\r\n              defaultValue={passwordLength}\r\n              min={5}\r\n              max={90}\r\n              onChange={(data) => setPasswordLength(data)}\r\n              renderThumb={(props) => (<div className=\"thumb-0\" {...props}>\r\n    \t\t\t\t\t\t{passwordLength}\r\n  \t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t}\r\n            \t/>\r\n          </div>\r\n        </CheckBoxesContext.Provider>\r\n      </div>\r\n      <div className=\"screen-margin button screen__button\" onClick={generatePasswordHandler}>\r\n        <p className=\"screen__bigTitle \">Create Password</p>\r\n      </div>\r\n      <div className=\"generator__menu beet screen-margin\">\r\n        <p className=\"blackTitle generator__title\">Your password :</p>\r\n        <input type=\"text\" className=\"generator__output\" value={result} onChange={(eve)=>setResult(eve.target.value)}/>\r\n        <div className=\"generator__copy button\" onClick={copyHandler}>\r\n          <p>Copy</p>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default PasswordGenerator;\r\n/*<ReactSlider\r\n  defaultValue={maxResults}\r\n  min={1}\r\n  max={600}\r\n  onChange={(data) => setMaxResults(data)}\r\n  renderThumb={(props) => <Ball props={props} results={results} />}\r\n/>;*/\r\n"]},"metadata":{},"sourceType":"module"}