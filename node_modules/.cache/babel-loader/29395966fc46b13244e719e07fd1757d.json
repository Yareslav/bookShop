{"ast":null,"code":"import MouseUpListener from './mouse-up-listener';\n\nvar _isInteractiveStyleField = function _isInteractiveStyleField(styleFieldName) {\n  return styleFieldName === ':hover' || styleFieldName === ':active' || styleFieldName === ':focus';\n};\n\nvar resolveInteractionStyles = function resolveInteractionStyles(config) {\n  var ExecutionEnvironment = config.ExecutionEnvironment,\n      getComponentField = config.getComponentField,\n      getState = config.getState,\n      mergeStyles = config.mergeStyles,\n      props = config.props,\n      setState = config.setState,\n      style = config.style;\n  var newComponentFields = {};\n  var newProps = {}; // Only add handlers if necessary\n\n  if (style[':hover']) {\n    // Always call the existing handler if one is already defined.\n    // This code, and the very similar ones below, could be abstracted a bit\n    // more, but it hurts readability IMO.\n    var existingOnMouseEnter = props.onMouseEnter;\n\n    newProps.onMouseEnter = function (e) {\n      existingOnMouseEnter && existingOnMouseEnter(e);\n      setState(':hover', true);\n    };\n\n    var existingOnMouseLeave = props.onMouseLeave;\n\n    newProps.onMouseLeave = function (e) {\n      existingOnMouseLeave && existingOnMouseLeave(e);\n      setState(':hover', false);\n    };\n  }\n\n  if (style[':active']) {\n    var existingOnMouseDown = props.onMouseDown;\n\n    newProps.onMouseDown = function (e) {\n      existingOnMouseDown && existingOnMouseDown(e);\n      newComponentFields._lastMouseDown = Date.now();\n      setState(':active', 'viamousedown');\n    };\n\n    var existingOnKeyDown = props.onKeyDown;\n\n    newProps.onKeyDown = function (e) {\n      existingOnKeyDown && existingOnKeyDown(e);\n\n      if (e.key === ' ' || e.key === 'Enter') {\n        setState(':active', 'viakeydown');\n      }\n    };\n\n    var existingOnKeyUp = props.onKeyUp;\n\n    newProps.onKeyUp = function (e) {\n      existingOnKeyUp && existingOnKeyUp(e);\n\n      if (e.key === ' ' || e.key === 'Enter') {\n        setState(':active', false);\n      }\n    };\n  }\n\n  if (style[':focus']) {\n    var existingOnFocus = props.onFocus;\n\n    newProps.onFocus = function (e) {\n      existingOnFocus && existingOnFocus(e);\n      setState(':focus', true);\n    };\n\n    var existingOnBlur = props.onBlur;\n\n    newProps.onBlur = function (e) {\n      existingOnBlur && existingOnBlur(e);\n      setState(':focus', false);\n    };\n  }\n\n  if (style[':active'] && !getComponentField('_radiumMouseUpListener') && ExecutionEnvironment.canUseEventListeners) {\n    newComponentFields._radiumMouseUpListener = MouseUpListener.subscribe(function () {\n      Object.keys(getComponentField('state')._radiumStyleState).forEach(function (key) {\n        if (getState(':active', key) === 'viamousedown') {\n          setState(':active', false, key);\n        }\n      });\n    });\n  } // Merge the styles in the order they were defined\n\n\n  var interactionStyles = props.disabled ? [style[':disabled']] : Object.keys(style).filter(function (name) {\n    return _isInteractiveStyleField(name) && getState(name);\n  }).map(function (name) {\n    return style[name];\n  });\n  var newStyle = mergeStyles([style].concat(interactionStyles)); // Remove interactive styles\n\n  newStyle = Object.keys(newStyle).reduce(function (styleWithoutInteractions, name) {\n    if (!_isInteractiveStyleField(name) && name !== ':disabled') {\n      styleWithoutInteractions[name] = newStyle[name];\n    }\n\n    return styleWithoutInteractions;\n  }, {});\n  return {\n    componentFields: newComponentFields,\n    props: newProps,\n    style: newStyle\n  };\n};\n\nexport default resolveInteractionStyles;","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/node_modules/radium/es/plugins/resolve-interaction-styles-plugin.js"],"names":["MouseUpListener","_isInteractiveStyleField","styleFieldName","resolveInteractionStyles","config","ExecutionEnvironment","getComponentField","getState","mergeStyles","props","setState","style","newComponentFields","newProps","existingOnMouseEnter","onMouseEnter","e","existingOnMouseLeave","onMouseLeave","existingOnMouseDown","onMouseDown","_lastMouseDown","Date","now","existingOnKeyDown","onKeyDown","key","existingOnKeyUp","onKeyUp","existingOnFocus","onFocus","existingOnBlur","onBlur","canUseEventListeners","_radiumMouseUpListener","subscribe","Object","keys","_radiumStyleState","forEach","interactionStyles","disabled","filter","name","map","newStyle","concat","reduce","styleWithoutInteractions","componentFields"],"mappings":"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","sourcesContent":["import MouseUpListener from './mouse-up-listener';\n\nvar _isInteractiveStyleField = function _isInteractiveStyleField(styleFieldName) {\n  return styleFieldName === ':hover' || styleFieldName === ':active' || styleFieldName === ':focus';\n};\n\nvar resolveInteractionStyles = function resolveInteractionStyles(config) {\n  var ExecutionEnvironment = config.ExecutionEnvironment,\n      getComponentField = config.getComponentField,\n      getState = config.getState,\n      mergeStyles = config.mergeStyles,\n      props = config.props,\n      setState = config.setState,\n      style = config.style;\n  var newComponentFields = {};\n  var newProps = {}; // Only add handlers if necessary\n\n  if (style[':hover']) {\n    // Always call the existing handler if one is already defined.\n    // This code, and the very similar ones below, could be abstracted a bit\n    // more, but it hurts readability IMO.\n    var existingOnMouseEnter = props.onMouseEnter;\n\n    newProps.onMouseEnter = function (e) {\n      existingOnMouseEnter && existingOnMouseEnter(e);\n      setState(':hover', true);\n    };\n\n    var existingOnMouseLeave = props.onMouseLeave;\n\n    newProps.onMouseLeave = function (e) {\n      existingOnMouseLeave && existingOnMouseLeave(e);\n      setState(':hover', false);\n    };\n  }\n\n  if (style[':active']) {\n    var existingOnMouseDown = props.onMouseDown;\n\n    newProps.onMouseDown = function (e) {\n      existingOnMouseDown && existingOnMouseDown(e);\n      newComponentFields._lastMouseDown = Date.now();\n      setState(':active', 'viamousedown');\n    };\n\n    var existingOnKeyDown = props.onKeyDown;\n\n    newProps.onKeyDown = function (e) {\n      existingOnKeyDown && existingOnKeyDown(e);\n\n      if (e.key === ' ' || e.key === 'Enter') {\n        setState(':active', 'viakeydown');\n      }\n    };\n\n    var existingOnKeyUp = props.onKeyUp;\n\n    newProps.onKeyUp = function (e) {\n      existingOnKeyUp && existingOnKeyUp(e);\n\n      if (e.key === ' ' || e.key === 'Enter') {\n        setState(':active', false);\n      }\n    };\n  }\n\n  if (style[':focus']) {\n    var existingOnFocus = props.onFocus;\n\n    newProps.onFocus = function (e) {\n      existingOnFocus && existingOnFocus(e);\n      setState(':focus', true);\n    };\n\n    var existingOnBlur = props.onBlur;\n\n    newProps.onBlur = function (e) {\n      existingOnBlur && existingOnBlur(e);\n      setState(':focus', false);\n    };\n  }\n\n  if (style[':active'] && !getComponentField('_radiumMouseUpListener') && ExecutionEnvironment.canUseEventListeners) {\n    newComponentFields._radiumMouseUpListener = MouseUpListener.subscribe(function () {\n      Object.keys(getComponentField('state')._radiumStyleState).forEach(function (key) {\n        if (getState(':active', key) === 'viamousedown') {\n          setState(':active', false, key);\n        }\n      });\n    });\n  } // Merge the styles in the order they were defined\n\n\n  var interactionStyles = props.disabled ? [style[':disabled']] : Object.keys(style).filter(function (name) {\n    return _isInteractiveStyleField(name) && getState(name);\n  }).map(function (name) {\n    return style[name];\n  });\n  var newStyle = mergeStyles([style].concat(interactionStyles)); // Remove interactive styles\n\n  newStyle = Object.keys(newStyle).reduce(function (styleWithoutInteractions, name) {\n    if (!_isInteractiveStyleField(name) && name !== ':disabled') {\n      styleWithoutInteractions[name] = newStyle[name];\n    }\n\n    return styleWithoutInteractions;\n  }, {});\n  return {\n    componentFields: newComponentFields,\n    props: newProps,\n    style: newStyle\n  };\n};\n\nexport default resolveInteractionStyles;"]},"metadata":{},"sourceType":"module"}