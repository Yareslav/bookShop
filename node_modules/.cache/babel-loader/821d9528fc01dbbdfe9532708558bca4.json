{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Programesoft\\\\Javascript\\\\bookshop\\\\src\\\\screens\\\\Main\\\\components\\\\OfferBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useMemo } from \"react\";\nimport fetcher from \"../../../functions/fetcher\";\nimport formater from \"../../../functions/formater\";\nimport random from \"../../../functions/random\";\nimport topics from \"../topics\";\nimport BookCard from \"../../../globalComponents/BookCard\";\nimport compare from \"../../../functions/compare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OfferBooks = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    let requestNumber = 6;\n    const randomTopics = [...topics];\n    randomTopics.sort(() => 0.5 - Math.random());\n    let mass = [{\n      title: \"Books from author you liked\",\n      data: getBookField(\"authors\")\n    }, {\n      title: \"Books you were searching for\",\n      data: JSON.parse(localStorage.getItem(\"previousTopics\"))\n    }, {\n      title: \"Books from categories you liked\",\n      data: getBookField(\"categories\")\n    }].forEach(async _ref => {\n      let {\n        title,\n        data\n      } = _ref;\n      if (data.length == 0) return;\n      requestNumber--;\n      let requestData;\n\n      if (random(0, 1) == 0) {\n        data.sort(() => 0.5 - Math.random());\n        requestData = data[0];\n      } else {\n        requestData = data[data.length - 1];\n      }\n\n      request(requestData, title);\n    });\n\n    for (let i = 0; i < requestNumber; i++) request(randomTopics[i], randomTopics[i]);\n  }, []);\n\n  const sortByRatingOrNot = items => {\n    if (random(0, 1) == 0) {\n      items.sort(() => 0.5 - Math.random());\n    } else {\n      items.sort((next, curr) => {\n        return curr.rating - next.rating;\n      });\n    }\n  };\n\n  const filterBooksThatNotBelongsToFavorites = items => {\n    let mass = JSON.parse(localStorage.getItem(\"favoriteBooks\"));\n    return items.filter(elem => {\n      for (let i = 0; i < mass.length; i++) {\n        if (compare(mass[i], elem)) return false;\n      }\n\n      return true;\n    });\n  };\n\n  const request = async (mass, title) => {\n    let results = [];\n\n    try {\n      let response = await fetcher(mass);\n      let {\n        items\n      } = await response.json();\n      if (items) results = items;\n    } catch (error) {\n      console.log(error);\n    } finally {\n      results = results.map(elem => formater(elem));\n      results = filterBooksThatNotBelongsToFavorites(results);\n      sortByRatingOrNot(results);\n      setData(curr => [...curr, {\n        title: title,\n        elements: results.slice(0, 6)\n      }]);\n    }\n  };\n\n  const getBookField = key => {\n    const mass = JSON.parse(localStorage.getItem(\"favoriteBooks\")) || [];\n    const result = [];\n    mass.forEach(elem => {\n      if (elem[key] != \"Unknown\") result.push(elem[key]);\n    });\n    return result;\n  };\n\n  return data.map(_ref2 => {\n    let {\n      title,\n      elements\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"main__line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: elements.map(elem => /*#__PURE__*/_jsxDEV(BookCard, {\n          data: elem,\n          mode: \"normal\"\n        }, elem.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  });\n};\n\n_s(OfferBooks, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = OfferBooks;\nexport default OfferBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfferBooks\");","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/src/screens/Main/components/OfferBooks.js"],"names":["React","useState","useContext","useEffect","useMemo","fetcher","formater","random","topics","BookCard","compare","OfferBooks","data","setData","requestNumber","randomTopics","sort","Math","mass","title","getBookField","JSON","parse","localStorage","getItem","forEach","length","requestData","request","i","sortByRatingOrNot","items","next","curr","rating","filterBooksThatNotBelongsToFavorites","filter","elem","results","response","json","error","console","log","map","elements","slice","key","result","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect,useMemo } from \"react\";\r\nimport fetcher from \"../../../functions/fetcher\";\r\nimport formater from \"../../../functions/formater\";\r\nimport random from \"../../../functions/random\";\r\nimport topics from \"../topics\";\r\nimport BookCard from \"../../../globalComponents/BookCard\";\r\nimport compare from \"../../../functions/compare\";\r\nconst OfferBooks = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    let requestNumber = 6;\r\n    const randomTopics = [...topics];\r\n    randomTopics.sort(() => 0.5 - Math.random());\r\n    let mass = [\r\n      {\r\n        title: \"Books from author you liked\",\r\n        data: getBookField(\"authors\"),\r\n      },\r\n      {\r\n        title: \"Books you were searching for\",\r\n        data: JSON.parse(localStorage.getItem(\"previousTopics\")),\r\n      },\r\n      {\r\n        title: \"Books from categories you liked\",\r\n        data: getBookField(\"categories\"),\r\n      }\r\n    ].forEach(async ({ title, data }) => {\r\n      if (data.length == 0) return;\r\n      requestNumber--;\r\n      let requestData;\r\n      if (random(0, 1) == 0) {\r\n        data.sort(() => 0.5 - Math.random());\r\n        requestData = data[0];\r\n      } else {\r\n        requestData = data[data.length - 1];\r\n      }\r\n      request(requestData, title);\r\n    });\r\n    for (let i = 0; i < requestNumber; i++)\r\n      request(randomTopics[i], randomTopics[i]);\r\n  }, []);\r\n\r\n  const sortByRatingOrNot = (items) => {\r\n    if (random(0, 1) == 0) {\r\n      items.sort(() => 0.5 - Math.random());\r\n    } else {\r\n      items.sort((next, curr) => {\r\n        return curr.rating - next.rating;\r\n      });\r\n    }\r\n  };\r\n\r\n  const filterBooksThatNotBelongsToFavorites = (items) => {\r\n    let mass = JSON.parse(localStorage.getItem(\"favoriteBooks\"));\r\n    return items.filter((elem) => {\r\n      for (let i = 0; i < mass.length; i++) {\r\n        if (compare(mass[i], elem)) return false;\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const request = async (mass, title) => {\r\n    let results = [];\r\n    try {\r\n      let response = await fetcher(mass);\r\n      let { items } = await response.json();\r\n      if (items) results=items;\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      results = results.map((elem) => formater(elem));\r\n      results = filterBooksThatNotBelongsToFavorites(results);\r\n      sortByRatingOrNot(results);\r\n      setData((curr) => [\r\n        ...curr,\r\n        { title: title, elements: results.slice(0, 6) },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const getBookField = (key) => {\r\n    const mass = JSON.parse(localStorage.getItem(\"favoriteBooks\")) || [];\r\n    const result = [];\r\n    mass.forEach((elem) => {\r\n      if (elem[key] != \"Unknown\") result.push(elem[key]);\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return data.map(({ title, elements }) => (\r\n    <>\r\n      <p className=\"title\">{title}</p>\r\n      <p className=\"main__line\" />\r\n      <div className=\"grid\">\r\n        {elements.map((elem) => (\r\n          <BookCard data={elem} mode=\"normal\" key={elem.key}/>\r\n        ))}\r\n      </div>\r\n    </>\r\n  ));\r\n};\r\nexport default OfferBooks;\r\n"]},"metadata":{},"sourceType":"module"}