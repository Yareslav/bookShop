{"ast":null,"code":"import Enhancer from './enhancer';\nimport Plugins from './plugins';\nimport Style from './components/style';\nimport StyleRoot from './components/style-root';\nimport getState from './get-state';\nimport keyframes from './keyframes';\nimport resolveStyles from './resolve-styles';\n\nfunction Radium(ComposedComponent) {\n  return Enhancer(ComposedComponent);\n} // Legacy object support.\n//\n// Normally it would be disfavored to attach these to the `Radium` object\n// because it defeats tree-shaking, using instead the ESM exports. But,\n// the `Radium` `Enhancer` uses **all** of these, so there's no extra \"cost\"\n// to them being explicitly on the `Radium` object.\n\n\nRadium.Plugins = Plugins;\nRadium.Style = Style;\nRadium.StyleRoot = StyleRoot;\nRadium.getState = getState;\nRadium.keyframes = keyframes;\n\nif (process.env.NODE_ENV !== 'production') {\n  Radium.TestMode = {\n    clearState: resolveStyles.__clearStateForTests,\n    disable: resolveStyles.__setTestMode.bind(null, false),\n    enable: resolveStyles.__setTestMode.bind(null, true)\n  };\n}\n\nexport default Radium; // ESM re-exports\n\nexport { Plugins, Style, StyleRoot, getState, keyframes };","map":{"version":3,"sources":["C:/My/Programesoft/Javascript/bookshop/node_modules/radium/es/index.js"],"names":["Enhancer","Plugins","Style","StyleRoot","getState","keyframes","resolveStyles","Radium","ComposedComponent","process","env","NODE_ENV","TestMode","clearState","__clearStateForTests","disable","__setTestMode","bind","enable"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,SAASC,MAAT,CAAgBC,iBAAhB,EAAmC;AACjC,SAAOR,QAAQ,CAACQ,iBAAD,CAAf;AACD,C,CAAC;AACF;AACA;AACA;AACA;AACA;;;AAGAD,MAAM,CAACN,OAAP,GAAiBA,OAAjB;AACAM,MAAM,CAACL,KAAP,GAAeA,KAAf;AACAK,MAAM,CAACJ,SAAP,GAAmBA,SAAnB;AACAI,MAAM,CAACH,QAAP,GAAkBA,QAAlB;AACAG,MAAM,CAACF,SAAP,GAAmBA,SAAnB;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,MAAM,CAACK,QAAP,GAAkB;AAChBC,IAAAA,UAAU,EAAEP,aAAa,CAACQ,oBADV;AAEhBC,IAAAA,OAAO,EAAET,aAAa,CAACU,aAAd,CAA4BC,IAA5B,CAAiC,IAAjC,EAAuC,KAAvC,CAFO;AAGhBC,IAAAA,MAAM,EAAEZ,aAAa,CAACU,aAAd,CAA4BC,IAA5B,CAAiC,IAAjC,EAAuC,IAAvC;AAHQ,GAAlB;AAKD;;AAED,eAAeV,MAAf,C,CAAuB;;AAEvB,SAASN,OAAT,EAAkBC,KAAlB,EAAyBC,SAAzB,EAAoCC,QAApC,EAA8CC,SAA9C","sourcesContent":["import Enhancer from './enhancer';\nimport Plugins from './plugins';\nimport Style from './components/style';\nimport StyleRoot from './components/style-root';\nimport getState from './get-state';\nimport keyframes from './keyframes';\nimport resolveStyles from './resolve-styles';\n\nfunction Radium(ComposedComponent) {\n  return Enhancer(ComposedComponent);\n} // Legacy object support.\n//\n// Normally it would be disfavored to attach these to the `Radium` object\n// because it defeats tree-shaking, using instead the ESM exports. But,\n// the `Radium` `Enhancer` uses **all** of these, so there's no extra \"cost\"\n// to them being explicitly on the `Radium` object.\n\n\nRadium.Plugins = Plugins;\nRadium.Style = Style;\nRadium.StyleRoot = StyleRoot;\nRadium.getState = getState;\nRadium.keyframes = keyframes;\n\nif (process.env.NODE_ENV !== 'production') {\n  Radium.TestMode = {\n    clearState: resolveStyles.__clearStateForTests,\n    disable: resolveStyles.__setTestMode.bind(null, false),\n    enable: resolveStyles.__setTestMode.bind(null, true)\n  };\n}\n\nexport default Radium; // ESM re-exports\n\nexport { Plugins, Style, StyleRoot, getState, keyframes };"]},"metadata":{},"sourceType":"module"}